1.精灵图：
（1）减少服务器的请求次数，提高页面的加载速度
（2）精灵技术主要是针对背景图片使用，就是把多个小背景图片整合到一张大图片中
（3）这个大图片就叫做sprites（精灵图）
（4）移动背景图片位置，此时可以使用background-position
（5）移动的距离就是这个目标图片的x和y坐标，注意网页中的坐标有所不同（向右x,向下y）

2.字体图标（iconfont）：主要用于显示网页中常用、通用的一些小图标
（1）轻量级：一个图标字体要比一系列的图像要小，一旦字体加载了，图标就会马上渲染出来，减少了服务器请求
（2）灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等
（3）兼容性：几乎支持所有的浏览器

3.css三角的做法，box{width:0;height:0;}

4.css用户界面样式
（1）鼠标样式：cursor
    （1）default：默认，小白
    （2）pointer：小手
    （3）move：移动
    （4）text：文本样式
    （5）not-allowed:禁止
（2）轮廓：outline 0/none:取消默认的轮廓线
（3）文本域防止拖拽：textarea {resize:none}

5.vertical-align:用于设置一个元素的垂直对齐方式，只针对行内元素/行内块元素有效
让图片和文字垂直居中
（1）baseline（基线）:默认，元素放置在父元素的基线上
（2）top（顶线）：把元素的顶端与行中最高元素的顶端对齐
（3）middle（中线）：把此元素放置在父元素的中部
（4）bottom（底线）：把元素的顶端与行中最低的元素的顶端对齐
将图片放进一个div盒子里，底部默认有空白间隙的问题（因为行内块元素会和文字的基线对齐）
1.给图片添加vertical-align：属性只要不是baseline就行（提倡使用的）
2.把图片转换为块级元素 display：block

6.溢出的文字用省略号显示
（1）单行文本溢出显示省略号--必须满足三个条件
    （1）先强制一行内显示文本 white-space：nowrap（默认normal自动换行）
    （2）超出的部分隐藏 overflow：hidden
    （3）文字用省略号替代超出的部分 text-overflow：ellipsis
（2）多行文本溢出显示省略号（有较大兼容性问题，适合于webkit浏览器移动端）
（移动端大部分是webkit内核）
     overflow：hidden
     text-overflow: ellipsis
     display: -webkit-box (弹性伸缩盒子模型显示)
     -webkit-line-clamp:2（限制在一个块元素显示的文本的行数） 
     -webkit-box-orient:vertical （设置或检索伸缩盒对象的子元素的排列方式）

7.布局技巧
（1）margin负值巧妙运用
当给多个div盒子做浮动时，边框间会重合导致像素过大，这时我们可以使用
margin-left：-1px (border-collapse只适用于table)
（2）文字围绕浮动元素巧妙运用
就是浮动元素脱标，不会压住文字，文字会围绕浮动元素显示
（3）行内块元素的巧妙运用
给父元素添加text-align：center，就能让行内块元素居中

8.CSS初始化：不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对HTML
文本呈现的差异，照顾浏览器的兼容，我们需要对CSS初始化（css reset 重设浏览器的样式）